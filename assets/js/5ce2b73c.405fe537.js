"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8787],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),u=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=u(t),d=r,g=m["".concat(i,".").concat(d)]||m[d]||p[d]||s;return t?a.createElement(g,l(l({ref:n},c),{},{components:t})):a.createElement(g,l({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,l=new Array(s);l[0]=m;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<s;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3695:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var a=t(7462),r=(t(7294),t(3905));const s={},l="Deploying Docusaurus",o={unversionedId:"foundational/srvcs/docusaurus",id:"foundational/srvcs/docusaurus",title:"Deploying Docusaurus",description:"This exercise aims to deploy docusaurus with GitHub Pages and Typesense as search engine.",source:"@site/docs/0-foundational/srvcs/docusaurus.mdx",sourceDirName:"0-foundational/srvcs",slug:"/foundational/srvcs/docusaurus",permalink:"/foundational/srvcs/docusaurus",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/0-foundational/srvcs/docusaurus.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Srvcs",permalink:"/category/srvcs"},next:{title:"github-actions",permalink:"/foundational/srvcs/github-actions"}},i={},u=[{value:"Remote acctions",id:"remote-acctions",level:2},{value:"Local actions",id:"local-actions",level:2}],c={toc:u};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deploying-docusaurus"},"Deploying Docusaurus"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This exercise aims to deploy docusaurus with GitHub Pages and Typesense as search engine.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Generic values that you need change")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"website: usen.io\ngithub entity: usen-io\ngithub repo: website\n")),(0,r.kt)("h2",{id:"remote-acctions"},"Remote acctions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"pre-requisits:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"TYPESENSE_SCRAPER_API_KEY\nexample: z3diTzyuQRnBzPbVi2TVp3XKcVfM3Cjv\n\nTYPESENSE_INSTANCE_URL_01\nexample: europe-01-typesense.usen.io\n\nTYPESENSE_SEARCH_API_KEY\nexample: r3I89rG7eG36F4eEYSmkyc4NJHaYR5LE\n\nTYPESENSE_COLLECTION_NAME\nexample: usen-doc\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GitHub Repo > Settings > Security > Secrets > Actions"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Add a github secret for typesense scraper API key:  TYPESENSE_SCRAPER_API_KEY"),(0,r.kt)("li",{parentName:"ul"},"Add a github secret for typesense  instance URL: TYPESENSE_INSTANCE_URL_01"),(0,r.kt)("li",{parentName:"ul"},"Add a github secret for typesense search API key: TYPESENSE_SEARCH_API_KEY"),(0,r.kt)("li",{parentName:"ul"},"Add a github secret for typesense collection name: TYPESENSE_COLLECTION_NAME"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Now continue with Local actions ",(0,r.kt)("strong",{parentName:"p"},"after your first push")," back to this point. "),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"GitHub Repo > Settings > Build and deployment > Deploy from a branch > gh-pages"),(0,r.kt)("li",{parentName:"ul"},"Add custom domain: awesome.web"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"DNS provider setup"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"CNAME www usen-io.github.io"),(0,r.kt)("li",{parentName:"ul"},"CNAME @ usen-io.github.io")))),(0,r.kt)("h2",{id:"local-actions"},"Local actions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"GENERIC"),": values that you need change")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"website: usen.io\ngithub entity: usen-io\ngithub repo: website\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"FETCH:")," pre-requisits:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"asdf install nodejs 18.10.0 \nasdf global nodejs 18.10.0\nnpm install -g yarn\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"INSTALL:")," Docusarus base template:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npx create-docusaurus@latest website classic\ncd website\nyarn add docusaurus-theme-search-typesense@next\nyarn install\nmkdir -p .github/workflows/\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CREATE")," :")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title=".github/workflows/deploy.yml"',title:'".github/workflows/deploy.yml"'},"name: Deploy to GitHub Pages\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  deploy:\n    name: Deploy to GitHub Pages\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 18\n          cache: yarn\n\n      - name: Install dependencies\n        run: yarn install --frozen-lockfile\n      - name: Build website\n        run: yarn build\n        env:\n          TS_SEARCH_API_KEY: ${{ secrets.TYPESENSE_SEARCH_API_KEY }}\n          TS_INSTANCE_URL_01: ${{ secrets.TYPESENSE_INSTANCE_URL_01 }}\n          TS_COLLECTION_NAME: ${{ secrets.TYPESENSE_COLLECTION_NAME }}\n\n      # Popular action to deploy to GitHub Pages:\n      # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus\n      - name: Deploy to GitHub Pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          # Build output to publish to the `gh-pages` branch:\n          publish_dir: ./build\n          cname: usen.io\n          user_name: github-actions[bot]\n          user_email: 41898282+github-actions[bot]@users.noreply.github.com\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CREATE:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title=".github/workflows/typesense.yml"',title:'".github/workflows/typesense.yml"'},'name: Rebuild Search Index\n\non:\n  workflow_dispatch:\n  workflow_run:\n    workflows:\n    - pages-build-deployment\n    types:\n    - completed\n\njobs:\n  scrape:\n    name: Rebuild Index\n    runs-on: ubuntu-latest\n    container:\n      image: typesense/docsearch-scraper:latest\n      options: --user 0 ### incredible usefull variable.\n    strategy:\n      fail-fast: false\n      matrix:\n        node:\n        - hel\n        - fsn\n    steps:\n    -\n      name: Run scraper\n      env:\n        HOME: /root\n        TYPESENSE_API_KEY: ${{ secrets.TYPESENSE_SCRAPER_API_KEY }}\n        TYPESENSE_HOST: ${{ secrets.TYPESENSE_INSTANCE_URL_01 }}\n        TYPESENSE_PORT: \'443\'\n        TYPESENSE_PROTOCOL: https\n        CONFIG: |\n          {\n            "index_name": "${{ secrets.TYPESENSE_COLLECTION_NAME }}",\n            "start_urls": [\n              "https://usen.io/"\n            ],\n            "sitemap_urls": [\n              "https://usen.io/sitemap.xml"\n            ],\n            "sitemap_alternate_links": true,\n            "stop_urls": [],\n            "selectors": {\n              "lvl0": {\n                "selector": ".menu__link--sublist.menu__link--active",\n                "global": true,\n                "default_value": "Documentation"\n              },\n              "lvl1": "header h1",\n              "lvl2": "article h2",\n              "lvl3": "article h3",\n              "lvl4": "article h4",\n              "lvl5": "article h5, article td:first-child",\n              "lvl6": "article h6",\n              "text": "article p, article li, article td:last-child"\n            },\n            "strip_chars": " .,;:#",\n            "custom_settings": {\n              "separatorsToIndex": "_",\n              "attributesForFaceting": [\n                "language",\n                "version",\n                "type"\n              ],\n              "attributesToRetrieve": [\n                "hierarchy",\n                "content",\n                "anchor",\n                "url",\n                "url_without_anchor",\n                "type"\n              ]\n            },\n            "conversation_id": [\n              "1090805758"\n            ],\n            "nb_hits": 8687\n          }\n      run: pipenv run python -m src.index\n      working-directory: /root\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"EDIT"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="docusaurus.config.js"',title:'"docusaurus.config.js"'},"\nurl: 'https://your-docusaurus-test-site.com',\norganizationName: 'facebook',\nprojectName: 'docusaurus'\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ADD"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="docusaurus.config.js"',title:'"docusaurus.config.js"'},"\ndeploymentBranch: 'gh-pages',\n\n    themes: ['docusaurus-theme-search-typesense'],\n    themeConfig:\n      typesense: {\n        typesenseCollectionName: process.env.TS_COLLECTION_NAME,        \n        typesenseServerConfig: {\n          nodes: [\n            {\n              host: process.env.TS_INSTANCE_URL_01,\n              port: 443,\n              protocol: 'https',\n            },\n          ],\n          apiKey: process.env.TS_SEARCH_API_KEY,\n        },\n        typesenseSearchParameters: {},\n        contextualSearch: true,\n      },\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ADD")," git repo")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git-setup\ngit remote add github git@aa-github:usen-io/website.git\ngit push github main\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"TEST")," locally")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"yarn start\n")))}p.isMDXComponent=!0}}]);